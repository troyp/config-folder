[General]
plugin_priority=itemweb, itemimage, itemfakevim, itemencrypted, itemnotes, itemsync, itemtext, itemtags, itemdata

[Options]
action_has_input=false
action_has_output=false
action_output_tab=
action_separator=\\n
activate_closes=true
activate_focuses=true
activate_pastes=true
always_on_top=true
autostart=true
check_clipboard=true
check_selection=true
clipboard_notification_lines=0
clipboard_tab=&clipboard
command_history_size=100
confirm_exit=true
copy_clipboard=true
copy_selection=true
disable_tray=false
edit_ctrl_return=true
editor=emacsclient %1
expire_tab=0
hide_main_window=false
hide_tabs=false
hide_toolbar=false
hide_toolbar_labels=true
item_popup_interval=0
language=en
maxitems=9999
move=true
notification_horizontal_offset=10
notification_maximum_height=100
notification_maximum_width=300
notification_position=3
notification_vertical_offset=10
open_windows_on_current_screen=true
save_filter_history=false
show_tab_item_count=true
tab_tree=true
text_wrap=true
transparency=0
transparency_focused=10
tray_commands=true
tray_images=true
tray_item_paste=true
tray_items=8
tray_tab=
tray_tab_is_current=true
vi=true
tabs=&clipboard, C&JK, &unicode, &snippets

[Plugins]
itemdata\enabled=true
itemencrypted\enabled=true
itemfakevim\enabled=true
itemimage\enabled=true
itemnotes\enabled=true
itemsync\enabled=true
itemtags\enabled=true
itemtext\enabled=true
itemweb\enabled=true
itemweb\max_height=0
itemfakevim\really_enable=true
itemfakevim\source_file=
itemimage\image_editor=
itemimage\max_image_height=240
itemimage\max_image_width=320
itemimage\svg_editor=
itemdata\formats=text/uri-list, text/xml
itemdata\max_bytes=256
itemencrypted\encrypt_tabs=
itemnotes\icon_only=false
itemnotes\notes_at_bottom=false
itemnotes\show_tooltip=false
itemsync\format_settings=@Invalid()
itemsync\sync_tabs=@Invalid()
itemtags\tags=@Invalid()
itemtext\max_height=0
itemtext\max_lines=0
itemtext\use_rich_text=true

[Shortcuts]
change_tab_icon=ctrl+shift+t
commands=f6
copy_selected_items=ctrl+c
delete_item=del, ctrl+d
edit=f2
edit_notes=shift+f2
editor=ctrl+e
exit=ctrl+q
export_tab=ctrl+s
find_items=f3
format-next=ctrl+right
format-previous=ctrl+left
help=f1
import_tab=ctrl+i
move_down=ctrl+down
move_to_bottom=ctrl+end
move_to_clipboard=
move_to_top=ctrl+home
move_up=ctrl+up
new=ctrl+n
new_tab=ctrl+t
next_tab=right
paste_selected_items=ctrl+v
preferences=ctrl+p
previous_tab=left
process_manager=ctrl+shift+z
remove_tab=ctrl+w
rename_tab=ctrl+f2
reverse_selected_items=ctrl+shift+r
show-log=f12
show_clipboard_content=ctrl+shift+c
show_item_content=f4
sort_selected_items=ctrl+shift+s
system-run=f5
toggle_clipboard_storing=ctrl+shift+x

[Theme]
alt_bg=#eff0f1
alt_item_css=
bg=#fcfcfc
css=
cur_item_css="\n    ;border: 0.1em solid ${sel_bg}"
edit_bg=#fcfcfc
edit_fg=#31363b
edit_font=
fg=#31363b
find_bg=#ff0
find_fg=#000
find_font=
font=
font_antialiasing=true
item_css=
item_spacing=
menu_bar_css="\n    ;background: ${bg}\n    ;color: ${fg}"
menu_bar_disabled_css="\n    ;color: ${bg - #666}"
menu_bar_selected_css="\n    ;background: ${sel_bg}\n    ;color: ${sel_fg}"
menu_css="\n    ;border-top: 0.08em solid ${bg + #333}\n    ;border-left: 0.08em solid ${bg + #333}\n    ;border-bottom: 0.08em solid ${bg - #333}\n    ;border-right: 0.08em solid ${bg - #333}"
notes_bg=#ffffdc
notes_css=
notes_fg=#31363b
notes_font=
notification_bg=#333
notification_fg=#ddd
notification_font=
num_fg=#c4d8ec
num_font=
search_bar="\n    ;background: ${edit_bg}\n    ;color: ${edit_fg}\n    ;border: 1px solid ${alt_bg}\n    ;margin: 2px"
search_bar_focused="\n    ;border: 1px solid ${sel_bg}"
sel_bg=#baf384
sel_fg=#002d00
sel_item_css=
show_number=true
show_scrollbars=true
style_main_window=false
tab_bar_css="\n    ;background: ${bg - #222}"
tab_bar_item_counter="\n    ;color: ${fg - #044 + #400}\n    ;font-size: 6pt"
tab_bar_scroll_buttons_css="\n    ;background: ${bg - #222}\n    ;color: ${fg}\n    ;border: 0"
tab_bar_sel_item_counter="\n    ;color: ${sel_bg - #044 + #400}"
tab_bar_tab_selected_css="\n    ;padding: 0.5em\n    ;background: ${bg}\n    ;border: 0.05em solid ${bg}\n    ;color: ${fg}"
tab_bar_tab_unselected_css="\n    ;border: 0.05em solid ${bg}\n    ;padding: 0.5em\n    ;background: ${bg - #222}\n    ;color: ${fg - #333}"
tab_tree_css="\n    ;color: ${fg}\n    ;background-color: ${bg}"
tab_tree_item_counter="\n    ;color: ${fg - #044 + #400}\n    ;font-size: 6pt"
tab_tree_sel_item_counter="\n    ;color: ${sel_fg - #044 + #400}"
tab_tree_sel_item_css="\n    ;color: ${sel_fg}\n    ;background-color: ${sel_bg}\n    ;border-radius: 2px"
tool_bar_css="\n    ;color: ${fg}\n    ;background-color: ${bg}\n    ;border: 0"
tool_button_css="\n    ;background-color: transparent"
use_system_icons=false

[Commands]
1\Command="\n\t    copyq:\n\t    seconds = 2;\n\t    popup(\"\", clipboard(), seconds * 1000)"
1\Name=Show clipboard
2\Command="copyq:\n// Imports raw commands code (starting with [Command] or [Commands])\n// or from a link ('https://github.com/**/copyq-commands/blob/**.ini').\nvar timeOutSeconds = 10\nvar rawDataUrlPrefix = 'https://raw.githubusercontent.com'\n// Don't run this when mouse selection changes.\nif ( dataFormats().indexOf(mimeClipboardMode) != -1 )\n  abort()\nfunction importCommandsFromUrl(url)\n{\n  var m = url.match(/^https?:\\/\\/github\\.com(\\/.*)\\/blob(\\/.*\\.ini)/)\n  if (!m)\n    return;\n  var rawDataUrl = rawDataUrlPrefix + m[1] + m[2]\n  var reply = networkGet(rawDataUrl)\n  var commandsData = str(reply.data)\n  if (reply.status != 200) {\n    throw 'Failed to fetch commands.'\n        + '\\nStatus code: ' + reply.status\n        + '\\nError: ' + reply.error\n  }\n  if ( !commandsData.match(/^\\[Commands?\\]/) )\n    return;\n  return importCommands(commandsData);\n}\nvar cmds = importCommandsFromUrl(str(input())) || importCommands(input())\nvar list = '<ul>'\nfor (var i in cmds) {\n  var cmd = cmds[i]\n  var cmdType =\n    cmd.automatic ? 'automatic' :\n    cmd.inMenu ? 'menu/shortcut' :\n    cmd.globalShortcuts ? 'global shortcut' : '<b>???</b>';\n  list += '<li>' + escapeHtml(cmds[i].name) + ' (' + cmdType + ')</li>'\n}\nlist += '</ul>'\nvar message = '<p><b>Import commands</b> from clipboard?</p>' + list\nnotification(\n  '.title', 'Commands Available',\n  '.message', message,\n  '.time', timeOutSeconds*1000,\n  '.icon', '\xf085',\n  '.id', 'CopyQ_commands_in_clipboard',\n  '.button', 'Cancel', '', '',\n  '.button', 'Import', 'copyq: addCommands( importCommands(input()) )', exportCommands(cmds)\n)"
2\Icon=\xf085
2\Name=Notification for Copied Commands
size=5
3\Command="copyq:\nvar text = input()\ncopy(text)\ncopySelection(text)\npaste()"
3\GlobalShortcut=meta+v
3\Icon=\xf0ea
3\Name=Paste as Plain Text
2\Input=application/x-copyq-encrypted
4\Command=copyq: menu()
4\GlobalShortcut=meta+ctrl+alt+shift+q
4\Icon=\xf01c
4\Name=Show the tray menu
1\GlobalShortcut=meta+alt+c
2\Automatic=true
2\Match=^\\[Commands?\\]|https?://github\\.com/.*/copyq-commands/blob/.*\\.ini
3\HideWindow=true
3\InMenu=true
3\Input=text/plain
3\Shortcut=shift+return
5\Command=copyq: toggle()
5\GlobalShortcut=ctrl+alt+q, meta+q
5\Icon=\xf022
5\Name=Show/hide main window
